{"version":3,"sources":["pages/app/App.js","serviceWorker.js","components/listapi/ListApi.js","pages/home/Home.js","pages/details/Details.js","index.js","logo.svg"],"names":["App","react_default","a","createElement","className","src","logo","alt","react_router_dom","to","Button_default","size","variant","color","Component","Boolean","window","location","hostname","match","IMAGE","ListApi","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","films","isLoading","error","_this2","setState","fetch","then","response","ok","json","Error","film","results","catch","props","history","push","img","_this3","message","CircularProgress_default","List_default","map","ListItem_default","button","key","episode_id","onClick","_openDetails","ListItemAvatar_default","Avatar_default","title","ListItemText_default","primary","withRouter","theme","createMuiTheme","typography","useNextVariants","palette","main","Home","_abrirDrawer","valor","open","listamenu","ListItemIcon_default","Home_default","MuiThemeProvider_default","AppBar_default","position","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","Drawer_default","onClose","components_listapi_ListApi","Details","cardFilm","Card_default","CardActionArea_default","CardMedia_default","image","CardContent_default","gutterBottom","component","opening_crawl","goBack","ArrowBack_default","ReactDOM","render","basename","process","react_router","path","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7c2b5489.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport logo from '../../logo.svg';\nimport './App.css';\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Pressione o bot√£o para Entrar\n          </p>\n          <Link className=\"App-link\" to=\"/home\">\n            <Button className=\"btnClass\" size=\"large\" variant=\"contained\" color=\"primary\">\n              INICIAR\n            </Button>\n          </Link>\n        </header>\n      </div>\n    );\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from 'react-router-dom';\n\nimport './ListApi.css';\n\nconst API = 'https://swapi.dev/api/films/';\nconst IMAGE = 'https://www.desktopbackground.org/p/2014/03/24/736572_star-wars-logo-wallpapers-wallpapers-cave_1600x900_h.png';\n\nclass ListApi extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      films: [],\n      isLoading: false,\n      error: null,\n    };\n  }\n\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Alguma coisa n√£o deu certo...');\n        }\n      })\n      .then(film => this.setState({ films: film.results, isLoading: false }))\n        .catch(error => this.setState({error, isLoading: false}));\n  }\n  _openDetails(film){\n    this.props.history.push('/details', { film: film, img: IMAGE });\n  };\n\n\n  render() {\n    \n    if (this.state.error) {\n      return <p>{this.state.error.message}</p>;\n    }\n\n    if (this.state.isLoading) {\n      return <CircularProgress size={90} className=\"progress\" />\n    }\n      return (\n\n         <List>\n         {this.state.films.map((film) => (           \n           <ListItem button key={film.episode_id} onClick={()=>this._openDetails(film)}>\n        <ListItemAvatar>\n          <Avatar alt={film.title} src={IMAGE} />\n        </ListItemAvatar>\n             <ListItemText primary={film.title} />\n           </ListItem>\n         ))}\n       </List>\n      \n        );\n    \n  }\n}\n\nexport default withRouter(ListApi);\n","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport './Home.css';\n\nimport ListApi from '../../components/listapi/ListApi'\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {main: \"#000\"}\n  }\n});\n\nclass Home extends Component {\n  constructor(){\n    super();\n    this.state = {\n      open: false,\n    };\n  };\n  _abrirDrawer = (valor) => () => {\n    this.setState({\n      open: valor,\n    });\n  };\n  render() {\n    const listamenu = (\n      <div>\n        <List>\n        <Link className=\"Home-link\" to=\"/\">\n        <ListItem button>\n          <ListItemIcon> \n            <HomeIcon /> \n          </ListItemIcon>\n          <ListItemText primary=\"Tela Inicial\" />\n        </ListItem>\n        </Link>\n        </List>\n       \n      </div>\n    );\n\n\n    return (\n      \n      <MuiThemeProvider theme={theme}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton onClick={this._abrirDrawer(true)} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Home\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer open={this.state.open} onClose={this._abrirDrawer(false)}>\n          \n         {listamenu}\n        </Drawer>\n      <ListApi/>\n      </MuiThemeProvider>\n      );\n  };\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport './Details.css';\n\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {main: '#000'}\n  }\n});\n\n\nclass Details extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      film: [],\n      img: \"\"\n    };\n  };\n\n  /* componentWillMount() {\n    this.setState({ film: this.props.location.state.film, img: this.props.location.state.img });\n    \n  }; *///Obsoleto!\n  static getDerivedStateFromProps(props) {\n    return {  film: props.location.state.film, img: props.location.state.img };\n  };\n\n\n  render() {\n    \n    const cardFilm=(\n      <Card className=\"card\">\n      <CardActionArea>\n        <CardMedia\n          className=\"mediaDetails\"\n          image={this.state.img}\n          title={this.state.film.title} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {this.state.film.title}\n          </Typography>\n          <Typography component=\"p\">\n          {this.state.film.opening_crawl}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n    );\n\n    /*\n    return (\n    <div>\n    <h1>T√≠tulo: {this.state.film.title}</h1>\n    <h1>Descri√ß√£o: {this.state.film.opening_crawl}</h1>\n    \n    </div>\n      );\n  }*/\n  return (\n      \n    <MuiThemeProvider theme={theme}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton onClick={()=>this.props.history.goBack()} color=\"inherit\" aria-label=\"back\">\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Details\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {cardFilm}\n    </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Details;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './pages/home/Home';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Details from './pages/details/Details';\n\nReactDOM.render(\n<BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n            <Route path=\"/\" exact={true} component={App} />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/details\" component={Details} />\n    </Switch>\n</BrowserRouter>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}
